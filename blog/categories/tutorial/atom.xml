<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: tutorial | Reinaldo Junior]]></title>
  <link href="http://blog.reinaldojunior.net/blog/categories/tutorial/atom.xml" rel="self"/>
  <link href="http://blog.reinaldojunior.net/"/>
  <updated>2013-03-07T12:41:56-03:00</updated>
  <id>http://blog.reinaldojunior.net/</id>
  <author>
    <name><![CDATA[Reinaldo Junior]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Deploy automatizado de aplicações Rails com Capistrano e Github]]></title>
    <link href="http://blog.reinaldojunior.net/2011/07/11/deploy-automatizado-de-aplicacoes-rails/"/>
    <updated>2011-07-11T00:00:00-03:00</updated>
    <id>http://blog.reinaldojunior.net/2011/07/11/deploy-automatizado-de-aplicacoes-rails</id>
    <content type="html"><![CDATA[<div class='post'>
Nesse tutorial irei abordar a realização de deploy automatizado de uma aplicação Rails (3.0.X) utilizando o Github como repositório. A idéia é utilizar o capistrano para automatizar (e organizar) as tarefas de deployment. Para isso, irei criar um usuário no servidor que utilizará minha chave privada (cadastrada no Github) para fazer o deployment da aplicação.<br /><br /><h2>Configurando o servidor</h2>No servidor, crie um usuário que será utilizado para realizar o deploy. Eu utilizei uma senha gerada aleatóriamente (um MD5 de um arquivo, por exemplo). Em seguida, adicionei minha chave privada (a que eu uso para acessar meus repositórios no Github) ao arquivo authorized_keys do usuário de deploy.<br /><br /><b>Na máquina local</b><br /><span class="Apple-style-span" style="font-family: 'Courier New', Courier, monospace;"><br />scp ~/.ssh/id_rsa.pub reinaldo@servidor:/home/reinaldo/my_key.pub<br />ssh reinaldo@servidor<br /></span><br /><br /><b>No servidor</b><br /><span class="Apple-style-span" style="font-family: 'Courier New', Courier, monospace;"><br />sudo adduser deploy<br />MY_PUBLIC_KEY=/home/reinaldo/my_key.pub<br />sudo mkdir -p /home/deploy/.ssh<br />sudo cat $MY_PUBLIC_KEY&nbsp;&gt;&gt; /home/deploy/.ssh/authorized_keys &amp;&amp; rm&nbsp;$MY_PUBLIC_KEY<br />sudo chmod 600 /home/deploy/.ssh/authorized_keys<br />sudo chmod 700 /home/deploy/.ssh<br />sudo chown deploy:deploy -R /home/deploy</span><br /><br /><h2>Configurando a aplicação</h2>Adicione a gem capistrano no seu <b>Gemfile</b><br /><span class="Apple-style-span" style="font-family: 'Courier New', Courier, monospace;">gem 'capistrano'</span><br /><br />Em seguida, no diretório da aplicação<br /><span class="Apple-style-span" style="font-family: 'Courier New', Courier, monospace;"><br />bundle install<br />capify .<br />echo ".bundle\n" &gt;&gt; .gitignore<br /></span><br /><br />Isso vai criar o arquivo <b>config/deploy.rb</b> onde serão armazenadas as configurações de deploy, bem como as tasks.<br /><br />Meu arquivo ficou assim:<br /><script src="https://gist.github.com/1076956.js"> </script><br /><br />Pra finalizar, você precisa criar os diretórios no servidor. Para isso simplesmente execute (no diretorio da aplicação)<br /><span class="Apple-style-span" style="font-family: 'Courier New', Courier, monospace;">cap deploy:setup</span><br /><br /><h2>Realizando o Deploy</h2><br />Depois disso, você poderá realizar seu deploy automático executando o comando:<br /><span class="Apple-style-span" style="font-family: 'Courier New', Courier, monospace;">cap deploy</span></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Deploy automatizado de aplicações Rails com Capistrano e Github]]></title>
    <link href="http://blog.reinaldojunior.net/2011/07/11/deploy-automatizado-de-aplicacoes-rails/"/>
    <updated>2011-07-11T00:00:00-03:00</updated>
    <id>http://blog.reinaldojunior.net/2011/07/11/deploy-automatizado-de-aplicacoes-rails</id>
    <content type="html"><![CDATA[<p>Nesse tutorial irei abordar a realização de deploy automatizado de uma aplicação Rails (3.0.X) utilizando o Github como repositório. A idéia é utilizar o capistrano para automatizar (e organizar) as tarefas de deployment. Para isso, irei criar um usuário no servidor que utilizará minha chave privada (cadastrada no Github) para fazer o deployment da aplicação.</p>

<h2>Configurando o servidor</h2>

<p>No servidor, crie um usuário que será utilizado para realizar o deploy. Eu utilizei uma senha gerada aleatóriamente (um MD5 de um arquivo, por exemplo). Em seguida, adicionei minha chave privada (a que eu uso para acessar meus repositórios no Github) ao arquivo <code>authorized_keys</code> do usuário de <code>deploy</code>.</p>

<p><strong>Na máquina local</strong></p>

<p><code>console
scp ~/.ssh/id_rsa.pub reinaldo@servidor:/home/reinaldo/my_key.pub
ssh reinaldo@servidor
</code></p>

<p><strong>No servidor</strong></p>

<p><code>console
sudo adduser deploy
MY_PUBLIC_KEY=/home/reinaldo/my_key.pub
sudo mkdir -p /home/deploy/.ssh
sudo cat $MY_PUBLIC_KEY &gt;&gt; /home/deploy/.ssh/authorized_keys &amp;&amp; rm $MY_PUBLIC_KEY
sudo chmod 600 /home/deploy/.ssh/authorized_keys
sudo chmod 700 /home/deploy/.ssh
sudo chown deploy:deploy -R /home/deploy
</code></p>

<h2>Configurando a aplicação</h2>

<p>Adicione a gem capistrano no seu <em>Gemfile</em></p>

<p><code>ruby
gem 'capistrano'
</code></p>

<p>Em seguida, no diretório da aplicação</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>"Capistrando" a aplicação  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">bundle install</span>
</span><span class='line'><span class="go">capify .</span>
</span><span class='line'><span class="go">echo &quot;.bundle\n&quot; &gt;&gt; .gitignore</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Isso vai criar o arquivo <em>config/deploy.rb</em> onde serão armazenadas as configurações de deploy, bem como as tasks.</p>

<p>Meu arquivo ficou assim:</p>

<script src="https://gist.github.com/1076956.js"> </script>


<p>Pra finalizar, você precisa criar os diretórios no servidor. Para isso simplesmente execute (no diretorio da aplicação) <code>cap deploy:setup</code>.</p>

<h2>Realizando o Deploy</h2>

<p>Depois disso, você poderá realizar seu deploy automático executando o comando: <code>cap deploy</code>.</p>
]]></content>
  </entry>
  
</feed>
