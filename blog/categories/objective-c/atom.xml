<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: objective-c | Reinaldo Junior]]></title>
  <link href="https://blog.reinaldojunior.com/blog/categories/objective-c/atom.xml" rel="self"/>
  <link href="https://blog.reinaldojunior.com/"/>
  <updated>2014-04-25T19:01:51-03:00</updated>
  <id>https://blog.reinaldojunior.com/</id>
  <author>
    <name><![CDATA[Reinaldo Junior]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gerenciamento de Memória em Objective-C]]></title>
    <link href="https://blog.reinaldojunior.com/2011/04/09/gerenciamento-de-memoria-em-objective-c/"/>
    <updated>2011-04-09T00:00:00-03:00</updated>
    <id>https://blog.reinaldojunior.com/2011/04/09/gerenciamento-de-memoria-em-objective-c</id>
    <content type="html"><![CDATA[<div class='post'>
O gerenciamento de memória em Objective-C é feito por meio de <b>contagem de referências</b>. Cada objeto possui um "<b>retain count</b>" que representa quantos <b>outros objetos estão interessados nele</b>.<br /><br />Um objeto é <b>desalocado</b> (e a memória ocupada por ele é liberada) quando <b>não há nenhum outro objeto interessado nele</b>. Para impedir que ele seja desalocado um outro objeto deve demonstrar seu interesse enviando ao objeto-alvo a mensagem <b><i>retain</i></b>. Uma vez que um objeto não tenha mais nenhum interesse no objeto-alvo ele deve notificar o objeto por meio da mensagem <b><i>release</i></b>.<br /><br /><b>Resumindo</b>: <i>um sujeito retém (retain) objetos que ele está interessado e libera (release) objetos quando ele não está mais interessado</i>.<br /><a name='more'></a><br />A <a href="http://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/MemoryMgmt/Articles/mmObjectOwnership.html%23//apple_ref/doc/uid/20000043-SW2">dinâmica da gerência de memória</a> e da coleta de lixo é feita assim:<br /><ul><li>Quando um objeto é <b>criado</b> o retain count = 1 (quem criou está interessado nele, senão não teria criado =D).</li><li>Quando um objeto recebe uma mensagem <b><i>retain</i></b> o seu <i>retain count</i> é <b>incrementado</b> em 1 (o invocador da mensagem é mais um objeto interessado nele).</li><li>Quando um objeto recebe uma mensagem <b><i>release</i></b> o seu <i>retain count</i> é <b>decrementado</b> em 1 (o invocador da mensagem não está mais interessado nele).</li><li>Quando um objeto recebe uma mensagem <b><i>autorelease</i></b> o seu <i>retain count</i> <b>será decrementado</b> em 1 num futuro próximo (o invocador da mensagem não estará interessado no objeto depois do escopo atual). Para isso será utilizado um <a href="http://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/MemoryMgmt/Articles/mmAutoreleasePools.html%23//apple_ref/doc/uid/20000047-CJBFBEDI">Autorelease Pool</a>.</li><li>Quando um objeto tem seu <i>retain count</i> reduzido a <b>0 (zero)</b> ele será <b>desalocado</b>.</li></ul>Quando um objeto <b>incrementa</b> o <i>retain count</i> de outro objeto (por meio da mensagem <i>retain</i>, por exemplo) ele é responsável por esse retain. Na terminologia do Objective-C esse objeto (<i><b>owner</b></i>) passa a ter posse (<i><b>ownership</b></i>) sobre o outro objeto. Essa posse só é revogada quando o <i>owner</i> <b>decrementa</b> o <i>retain count</i> do objeto possuído (por meio das mensagens <i>release</i> ou <i>autorelease</i>).<br /><br />Um objeto toma posse de outro quando:<br /><ul><li><b>Cria o objeto</b> - usando mensagens que o nome comece com "<i>alloc</i>", "<i>new</i>", "<i>copy</i>", "<i>mutableCopy</i>"</li><li><b>Retém o objeto</b> - enviando a mensagem "<i>retain</i>"</li></ul><br />Com base nesses conceitos a <a href="http://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/MemoryMgmt/Articles/mmRules.html#//apple_ref/doc/uid/20000994-BAJHFBGH">regra da gerência de memória</a> para as aplicações é:<br /><blockquote><b>Teorema</b>: Você só deve liberar (<i>release</i>) objetos que você possua (<i>ownership</i>).</blockquote><blockquote><b>Corolário</b>: Se você precisa armazenar um objeto recebido, você deve tomar posse dele. Geralmente você delega essa responsabilidade aos métodos accessors (<i>@property</i>/<i>@synthetize</i>).</blockquote><b>TODO</b>: Falar sobre Autorelease Pools e Copy.<br /><br /><b>Disclaimer</b>: Todas essas informações foram retiradas do <a href="http://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/MemoryMgmt/MemoryMgmt.html">Memory Management Programming Guide</a> e não tem como objetivo ser uma tradução desse guia. Esse documento é apenas um resumo de um estudo pessoal.</div>

]]></content>
  </entry>
  
</feed>
